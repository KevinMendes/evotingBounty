-- For column type NUMBER where the value is set by the database, use a type such that DATABASE.TYPE.MAXVALUE <= APPLICATION.TYPE.MAXVALUE.
-- For column type NUMBER where the value is set by the application, use a type such that DATABASE.TYPE.MAXVALUE >= APPLICATION.TYPE.MAXVALUE.

CREATE TABLE ELECTION_EVENT
(
    ID                NUMBER(18)    NOT NULL UNIQUE,
    ELECTION_EVENT_ID VARCHAR2(100) NOT NULL UNIQUE,
    ENCRYPTION_GROUP  BLOB          NOT NULL,
    CHANGE_CONTROL_ID NUMBER(1)     NOT NULL,
    CONSTRAINT ELECTION_EVENT_PK PRIMARY KEY (ID),
    CONSTRAINT ELECTION_EVENT_IMMUTABILITY_CK CHECK (CHANGE_CONTROL_ID = 0)
);

CREATE SEQUENCE ELECTION_EVENT_SEQ
    MAXVALUE 9.223372E+18
    NOCYCLE;

CREATE TABLE CCR_RETURN_CODES_KEYS
(
    ELECTION_EVENT_FK_ID                         NUMBER(18) NOT NULL UNIQUE,
    CCRJ_RETURN_CODES_GENERATION_SECRET_KEY      BLOB       NOT NULL,
    CCRJ_CHOICE_RETURN_CODES_ENCRYPTION_KEY_PAIR BLOB       NOT NULL,
    CHANGE_CONTROL_ID                            NUMBER(1)  NOT NULL,
    CONSTRAINT CCR_RETURN_CODES_KEYS_PK PRIMARY KEY (ELECTION_EVENT_FK_ID),
    FOREIGN KEY (ELECTION_EVENT_FK_ID) REFERENCES ELECTION_EVENT (ID),
    CONSTRAINT CCR_RETURN_CODES_KEYS_IMMUTABILITY_CK CHECK (CHANGE_CONTROL_ID = 0)
);

CREATE TABLE CCM_ELECTION_KEY
(
    ELECTION_EVENT_FK_ID   NUMBER(18) NOT NULL UNIQUE,
    CCMJ_ELECTION_KEY_PAIR BLOB       NOT NULL,
    CHANGE_CONTROL_ID      NUMBER(1)  NOT NULL,
    CONSTRAINT CCM_ELECTION_KEY_PK PRIMARY KEY (ELECTION_EVENT_FK_ID),
    FOREIGN KEY (ELECTION_EVENT_FK_ID) REFERENCES ELECTION_EVENT (ID),
    CONSTRAINT CCM_ELECTION_KEY_IMMUTABILITY_CK CHECK (CHANGE_CONTROL_ID = 0)
);

CREATE TABLE ELECTION_EVENT_CONTEXT
(
    ELECTION_EVENT_FK_ID                      NUMBER(18) NOT NULL UNIQUE,
    COMBINED_CONTROL_COMPONENT_PUBLIC_KEYS    BLOB       NOT NULL,
    ELECTORAL_BOARD_PUBLIC_KEY                BLOB       NOT NULL,
    ELECTION_PUBLIC_KEY                       BLOB       NOT NULL,
    CHOICE_RETURN_CODES_ENCRYPTION_PUBLIC_KEY BLOB       NOT NULL,
    START_TIME                                TIMESTAMP  NOT NULL,
    FINISH_TIME                               TIMESTAMP  NOT NULL,
    CHANGE_CONTROL_ID                         INTEGER    NOT NULL,
    CONSTRAINT ELECTION_EVENT_CONTEXT_PK PRIMARY KEY (ELECTION_EVENT_FK_ID),
    FOREIGN KEY (ELECTION_EVENT_FK_ID) REFERENCES ELECTION_EVENT (ID),
    CONSTRAINT ELECTION_EVENT_CONTEXT_IMMUTABILITY_CK CHECK (CHANGE_CONTROL_ID = 0)
);

CREATE TABLE VERIFICATION_CARD_SET
(
    ID                               NUMBER(18)    NOT NULL UNIQUE,
    VERIFICATION_CARD_SET_ID         VARCHAR2(100) NOT NULL UNIQUE,
    ELECTION_EVENT_FK_ID             NUMBER(18)    NOT NULL,
    ALLOW_LIST_JSON                  BLOB          NOT NULL,
    COMBINED_CORRECTNESS_INFORMATION BLOB          NOT NULL,
    CHANGE_CONTROL_ID                NUMBER(10)    NOT NULL,
    CONSTRAINT VERIFICATION_CARD_SET_PK PRIMARY KEY (ID),
    FOREIGN KEY (ELECTION_EVENT_FK_ID) REFERENCES ELECTION_EVENT (ID)
);

CREATE SEQUENCE VERIFICATION_CARD_SET_SEQ
    MAXVALUE 9.223372E+18
    NOCYCLE;

CREATE TABLE VERIFICATION_CARD
(
    ID                           NUMBER(18)    NOT NULL UNIQUE,
    VERIFICATION_CARD_ID         VARCHAR2(100) NOT NULL UNIQUE,
    VERIFICATION_CARD_SET_FK_ID  NUMBER(18)    NOT NULL,
    VERIFICATION_CARD_PUBLIC_KEY BLOB          NOT NULL,
    CHANGE_CONTROL_ID            NUMBER(1)     NOT NULL,
    CONSTRAINT VERIFICATION_CARD_PK PRIMARY KEY (ID),
    FOREIGN KEY (VERIFICATION_CARD_SET_FK_ID) REFERENCES VERIFICATION_CARD_SET (ID),
    CONSTRAINT VERIFICATION_CARD_IMMUTABILITY_CK CHECK (CHANGE_CONTROL_ID = 0)
);

CREATE SEQUENCE VERIFICATION_CARD_SEQ
    MAXVALUE 9.223372E+18
    NOCYCLE;

CREATE TABLE VERIFICATION_CARD_STATE
(
    VERIFICATION_CARD_FK_ID NUMBER(18)            NOT NULL UNIQUE,
    PARTIALLY_DECRYPTED     CHAR(1)   DEFAULT 'N' NOT NULL,
    LCC_SHARE_CREATED       CHAR(1)   DEFAULT 'N' NOT NULL,
    CONFIRMATION_ATTEMPTS   NUMBER(1) DEFAULT 0   NOT NULL,
    CONFIRMED               CHAR(1)   DEFAULT 'N' NOT NULL,
    CHANGE_CONTROL_ID       NUMBER(10)            NOT NULL,
    CONSTRAINT VERIFICATION_CARD_STATE_PK PRIMARY KEY (VERIFICATION_CARD_FK_ID),
    FOREIGN KEY (VERIFICATION_CARD_FK_ID) REFERENCES VERIFICATION_CARD (ID)
);

CREATE TABLE ENCRYPTED_VERIFIABLE_VOTE
(
    VERIFICATION_CARD_FK_ID               NUMBER(18) NOT NULL UNIQUE,
    CONTEXT_IDS                           BLOB       NOT NULL,
    ENCRYPTED_VOTE                        BLOB       NOT NULL,
    EXPONENTIATED_ENCRYPTED_VOTE          BLOB       NOT NULL,
    ENCRYPTED_PARTIAL_CHOICE_RETURN_CODES BLOB       NOT NULL,
    EXPONENTIATION_PROOF                  BLOB       NOT NULL,
    PLAINTEXT_EQUALITY_PROOF              BLOB       NOT NULL,
    CHANGE_CONTROL_ID                     NUMBER(1)  NOT NULL,
    CONSTRAINT ENCRYPTED_VERIFIABLE_VOTE_PK PRIMARY KEY (VERIFICATION_CARD_FK_ID),
    FOREIGN KEY (VERIFICATION_CARD_FK_ID) REFERENCES VERIFICATION_CARD (ID),
    CONSTRAINT ENCRYPTED_VERIFIABLE_VOTE_IMMUTABILITY_CK CHECK (CHANGE_CONTROL_ID = 0)
);

CREATE TABLE INT_LOCK
(
    LOCK_KEY     CHAR(36)     NOT NULL,
    REGION       VARCHAR(100) NOT NULL,
    CLIENT_ID    CHAR(36)     NOT NULL,
    CREATED_DATE TIMESTAMP    NOT NULL,
    CONSTRAINT LOCK_PK PRIMARY KEY (LOCK_KEY, REGION)
);

CREATE TABLE COMMAND
(
    CONTEXT_ID         VARCHAR2(255 CHAR) NOT NULL,
    CONTEXT            VARCHAR2(255 CHAR) NOT NULL,
    CORRELATION_ID     VARCHAR2(255 CHAR) NOT NULL,
    NODE_ID            NUMBER(10)         NOT NULL,
    REQUEST_PAYLOAD    BLOB               NOT NULL,
    REQUEST_DATE_TIME  TIMESTAMP(6)       NOT NULL,
    RESPONSE_PAYLOAD   BLOB,
    RESPONSE_DATE_TIME TIMESTAMP(6),
    CHANGE_CONTROL_ID  NUMBER(10)         NOT NULL,
    PRIMARY KEY (CONTEXT_ID, CONTEXT, CORRELATION_ID, NODE_ID)
);

-- Deprecated tables.

CREATE TABLE NODE_KEYS
(
    NODE_ID           VARCHAR2(10) NOT NULL,
    KEYS              BLOB         NOT NULL,
    CHANGE_CONTROL_ID INTEGER      NOT NULL,
    CONSTRAINT NODE_KEYS_PK PRIMARY KEY (NODE_ID)
);

CREATE TABLE ELECTION_SIGNING_KEYS
(
    NODE_ID           VARCHAR2(10)  NOT NULL,
    ELECTION_EVENT_ID VARCHAR2(100) NOT NULL,
    KEYS              BLOB          NOT NULL,
    PASSWORD          BLOB          NOT NULL,
    CHANGE_CONTROL_ID INTEGER       NOT NULL,
    CONSTRAINT ELECTION_SIGNING_KEYS_PK PRIMARY KEY (NODE_ID, ELECTION_EVENT_ID)
);
