#Necessary to support spring batch
spring.main.allow-circular-references=true

spring.profiles.active=challenge

spring.batch.job.enabled=false
spring.batch.jobs.concurrency=4
spring.batch.steps.concurrency=4
spring.batch.jobs.qualifier=challenge

# internal server port
server.port=8090

# Path resolver workspace
sdm.workspace=${user.home}
sdm.sdmconfig=${sdm.workspace}/sdm/sdmConfig

# database
database.type=plocal
database.path=${sdm.workspace}/sdm/
database.name=sdmDB
database.password.location=${sdm.sdmconfig}/database_password.properties

# smartcards
smartcards.profile=default
smartcards.puk=222222

# admin portal
admin.portal.host=http://localhost:8005
admin.portal.enabled=true
admin.portal.url=${admin.portal.host}/ov-configuration/api/

# voting portal
voting.portal.host=http://localhost:7000
voting.portal.enabled=true
AU_URL=${voting.portal.host}/ag-ws-rest/au
EI_URL=${voting.portal.host}/ag-ws-rest/ei
VM_URL=${voting.portal.host}/ag-ws-rest/vm
VV_URL=${voting.portal.host}/ag-ws-rest/vv
EA_URL=${voting.portal.host}/ag-ws-rest
CR_URL=${voting.portal.host}/ag-ws-rest
OR_URL=${voting.portal.host}/ag-ws-rest/or
MO_URL=${voting.portal.host}/ag-ws-rest/mo

tenantID=100

## Maximum number voting cards for each chunk to be computed
##  Directly proportional to the Orchestrator runtime memory
##  Inversely proportional to the number of options per contest
choiceCodeGenerationChunkSize=10

# Cryptolib configuration properties
services.cryptolib.pool.size=20
services.cryptolib.timeout=-1

# Authentication parameters configuration
# Supported options: [SIMPLE, SINGLESECRET]
auth.generator.type=SINGLESECRET
# Supported options: [NONE, PROVIDED]
challenge.generator.type=PROVIDED

keystore.password.file=${sdm.sdmconfig}/keystore.properties

# Certificate Properties
# The following properties are used when creating the election event
services.ca.certificate.properties=${sdm.sdmconfig}/certificateProperties/servicesCAX509Certificate.properties
election.ca.certificate.properties=${sdm.sdmconfig}/certificateProperties/electionCAX509Certificate.properties
credentials.ca.certificate.properties=${sdm.sdmconfig}/certificateProperties/credentialsCAX509Certificate.properties
authorities.ca.certificate.properties=${sdm.sdmconfig}/certificateProperties/authoritiesCAX509Certificate.properties
auth.token.signer.certificate.properties=${sdm.sdmconfig}/certificateProperties/authTokenSignerX509Certificate.properties
# The follow properties are used when creating ballot boxes, voting card sets, verification card sets and voting cards
credential.auth.certificate.properties=${sdm.sdmconfig}/certificateProperties/credentialAuthX509Certificate.properties
voting.card.set.certificate.properties=${sdm.sdmconfig}/certificateProperties/votingCardSetX509Certificate.properties
verification.card.set.certificate.properties=${sdm.sdmconfig}/certificateProperties/verificationCardSetX509Certificate.properties

# location of contests configuration json file
elections.config.filename=${sdm.sdmconfig}/elections_config.json

# UI/feature toggling configuration
# enable/disable button for generating pre-voting additional outputs
generatePreVotingOutputs.enabled=true
# enable/disable button for generating post-voting additional outputs
generatePostVotingOutputs.enabled=true
# enable/disable button for importing and exports election event data
importExport.enabled=true
# enable/disable button for voting card precomputation
vcPrecomputation.enabled=true
# enable/disable button for voting card computation
vcComputation.enabled=true
# enable/disable button for computed voting card download
vcDownload.enabled=true

read.time.out=300
write.time.out=300
connection.time.out=300
